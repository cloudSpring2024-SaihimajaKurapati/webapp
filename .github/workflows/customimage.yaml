name: Integration Tests and Artifact Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      - name: Install MySQL server
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo systemctl status mysql
          sudo mysql --user=root --password=root -e "CREATE DATABASE IF NOT EXISTS health_check_db;"
          sudo mysql --user=root --password=root -e "SHOW DATABASES;"
          sudo mysql --user=root --password=root -e "USE health_check_db; CREATE TABLE IF NOT EXISTS Users (id CHAR(36) BINARY PRIMARY KEY, firstName VARCHAR(255) NOT NULL, lastName VARCHAR(255) NOT NULL, userName VARCHAR(255) NOT NULL UNIQUE, password VARCHAR(255) NOT NULL, createdAt DATETIME NOT NULL, updatedAt DATETIME NOT NULL);"

      - name: Set up environment variables
        run: |
          echo "DB_DIALECT=mysql" >> $GITHUB_ENV
          echo "DB_HOST=localhost" >> $GITHUB_ENV
          echo "DB_USERNAME=root" >> $GITHUB_ENV
          echo "DB_PASSWORD=root" >> $GITHUB_ENV
          echo "DB_NAME=health_check_db" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build application artifact
        run: zip -r application.zip ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: application
          path: application.zip

      - name: Upload script artifacts
        uses: actions/upload-artifact@v2
        with:
          name: scripts
          path: |
            /tmp/sqlinstall.sh
            /tmp/nodeinstall.sh
            /tmp/userPerm.sh
            /tmp/nodeapplication.sh

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: cloudgcp-414104
          service_account_key: ${{secrets.GCP_IAM_KEYS}}
          export_default_credentials: true

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: latest

      - name: Initialize Packer
        run: packer init webapp-packerfile.pkr.hcl

      - name: Make scripts executable
        run: |
          chmod +x sqlinstall.sh
          chmod +x nodeinstall.sh
          chmod +x userPerm.sh
          chmod +x nodeapplication.sh

      - name: Build Google Cloud image with Packer
        run: packer build webapp-packerfile.pkr.hcl
